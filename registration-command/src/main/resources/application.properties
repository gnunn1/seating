#spring.main.sources=org.mycompany

logging.config=classpath:logback.xml

# the options from org.apache.camel.spring.boot.CamelConfigurationProperties can be configured here
camel.springboot.name=MyCamel

# lets listen on all ports to ensure we can be invoked from the pod IP
server.address=0.0.0.0
server.port=8080
camel.component.servlet.mapping.contextPath=/*

# lets use a different management port in case you need to listen to HTTP requests on 8080
management.address=0.0.0.0
management.server.port=8081
management.endpoints.web.base-path=/

# configure management endpoints
management.endpoints.enabled-by-default = true
management.endpoint.hawtio.enabled = false
management.endpoint.jolokia.enabled = true
management.endpoints.health.enabled = true
management.health.defaults.enabled=true

#postgresql specific
mysql.service.name=${MYSQL_SERVICE:registerdb}
mysql.service.database=${MYSQL_DATABASE:registerdb}
mysql.service.username=${MYSQL_USER:dbuser}
mysql.service.password=${MYSQL_PASSWORD:password}

#Database configuration
spring.datasource.url = jdbc:mysql://${${mysql.service.name}.service.host}:${${mysql.service.name}.service.port}/${mysql.service.database}
spring.datasource.username = ${mysql.service.username}
spring.datasource.password = ${mysql.service.password}


#spring.datasource.url = jdbc:h2:mem:mydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.username = sa
#spring.datasource.password =
#spring.datasource.driver-class-name = org.h2.Driver
#spring.datasource.platform = h2